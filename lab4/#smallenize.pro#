FUNCTION channel_sort, fileTag, nFiles, nSpectra
;
; OVERVIEW
; --------
; will read incremental files as generated by leuschner_rx, then will
; combine all the spectra from each file into one spectrum. does this by
; taking the median of each spectra with the spectra following it,
; which leads to one file spectrum
;
; CALLING SEQUENCE
; ----------------
; result=channel_sort(fileTag, nFiles, nSpectra)
;
; PARAMETERS
; ----------
; fileTag: string                                                                                     
;     must be the fileTag used in file_orgy procedure to help user                                    
;     select the binary files that need the channels sorted                                           
; nFiles: int                                                                                         
;     the number of binary files labeled with fileTag. Must be                                        
;     incremental                                                                                     
; nSpectra: int                                                                                       
;     give the number of spectra used when you used picosampler. Should                               
;     have been output to a .log file if used file_orgy to call                                       
;     picosampler                                                                                     
;                                                                                                     
; OUTPUTS                                                                                             
; -------                                                                                             
;         specArr: list                                                                                       
;     an array containing one spectrum, the "averaged" spectrum from all                              
;     the spectra you took. be glad.                                                                  
;-                               :q!